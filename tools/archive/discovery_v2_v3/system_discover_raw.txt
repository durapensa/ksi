{"event": "system:discover", "data": {"namespaces": ["system", "state", "async_state", "module", "api", "correlation", "monitor", "transport", "completion", "permission", "sandbox", "agent", "message", "message_bus", "orchestration", "composition", "conversation", "injection", "file", "config"], "events": {"system": [{"event": "system:context", "summary": "Receive infrastructure context - state manager is available.", "handler": "handle_context", "module": "ksi_daemon.core.state"}, {"event": "system:context", "summary": "Receive the event router context.", "handler": "handle_context", "module": "ksi_daemon.core.discovery"}, {"event": "system:context", "summary": "Receive module context with event router reference.", "handler": "handle_context", "module": "ksi_daemon.core.monitor"}, {"event": "system:context", "summary": "Receive context including event emitter.", "handler": "handle_context", "module": "ksi_daemon.transport.unix_socket"}, {"event": "system:context", "summary": "Receive runtime context.", "handler": "handle_context", "module": "ksi_daemon.completion.completion_service"}, {"event": "system:context", "summary": "Receive plugin context with event emitter.", "handler": "handle_context", "module": "ksi_daemon.agent.agent_service"}, {"event": "system:context", "summary": "Store event emitter reference.", "handler": "handle_context", "module": "ksi_daemon.messaging.message_bus"}, {"event": "system:context", "summary": "Store event emitter reference.", "handler": "handle_context", "module": "ksi_daemon.orchestration.orchestration_service"}, {"event": "system:context", "summary": "Receive infrastructure from daemon context.", "handler": "handle_context", "module": "ksi_daemon.composition.composition_service"}, {"event": "system:context", "summary": "Store event emitter reference.", "handler": "handle_context", "module": "ksi_daemon.conversation.conversation_lock"}, {"event": "system:context", "summary": "Store event emitter reference.", "handler": "handle_context", "module": "ksi_daemon.injection.injection_router"}, {"event": "system:context", "summary": "Receive infrastructure from daemon context.", "handler": "handle_context", "module": "ksi_daemon.file.file_service"}, {"event": "system:context", "summary": "Receive infrastructure from daemon context.", "handler": "handle_context", "module": "ksi_daemon.config.config_service"}, {"event": "system:health", "summary": "System health check including module status.", "handler": "handle_system_health", "module": "ksi_daemon.daemon_core"}, {"event": "system:startup", "summary": "Initialize health check plugin.", "handler": "handle_startup", "module": "ksi_daemon.core.health"}, {"event": "system:startup", "summary": "Initialize correlation plugin.", "handler": "handle_startup", "module": "ksi_daemon.core.correlation"}, {"event": "system:startup", "summary": "Initialize discovery service.", "handler": "handle_startup", "module": "ksi_daemon.core.discovery"}, {"event": "system:startup", "summary": "Initialize monitor module.", "handler": "handle_startup", "module": "ksi_daemon.core.monitor"}, {"event": "system:startup", "summary": "Initialize transport on startup.", "handler": "handle_startup", "module": "ksi_daemon.transport.unix_socket"}, {"event": "system:startup", "summary": "Initialize litellm provider.", "handler": "handle_startup", "module": "ksi_daemon.completion.litellm"}, {"event": "system:startup", "summary": "Initialize the permission service.", "handler": "handle_startup", "module": "ksi_daemon.permissions.permission_service"}, {"event": "system:startup", "summary": "Initialize agent service on startup.", "handler": "handle_startup", "module": "ksi_daemon.agent.agent_service"}, {"event": "system:startup", "summary": "Initialize message bus.", "handler": "handle_startup", "module": "ksi_daemon.messaging.message_bus"}, {"event": "system:startup", "summary": "Initialize orchestration service on startup.", "handler": "handle_startup", "module": "ksi_daemon.orchestration.orchestration_service"}, {"event": "system:startup", "summary": "Initialize composition service on startup.", "handler": "handle_startup", "module": "ksi_daemon.composition.composition_service"}, {"event": "system:startup", "summary": "Initialize conversation service on startup.", "handler": "handle_startup", "module": "ksi_daemon.conversation.conversation_service"}, {"event": "system:startup", "summary": "Initialize conversation lock service on startup.", "handler": "handle_startup", "module": "ksi_daemon.conversation.conversation_lock"}, {"event": "system:startup", "summary": "Initialize injection router.", "handler": "handle_startup", "module": "ksi_daemon.injection.injection_router"}, {"event": "system:startup", "summary": "Initialize completion service on startup.", "handler": "handle_startup", "module": "ksi_daemon.completion.completion_service"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.core.health"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.core.correlation"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.core.discovery"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.core.monitor"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.transport.unix_socket"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.completion.completion_service"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.agent.agent_service"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.messaging.message_bus"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.orchestration.orchestration_service"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.composition.composition_service"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.conversation.conversation_service"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.conversation.conversation_lock"}, {"event": "system:shutdown", "summary": "Clean up on shutdown.", "handler": "handle_shutdown", "module": "ksi_daemon.injection.injection_router"}, {"event": "system:discover", "summary": "", "handler": "handle_discover_events", "module": "ksi_daemon.core.discovery"}, {"event": "system:help", "summary": "", "handler": "handle_event_help", "module": "ksi_daemon.core.discovery"}, {"event": "system:capabilities", "summary": "Get a summary of daemon capabilities.", "handler": "handle_capabilities", "module": "ksi_daemon.core.discovery"}, {"event": "system:ready", "summary": "Return long-running server task to keep daemon alive.", "handler": "handle_ready", "module": "ksi_daemon.transport.unix_socket"}, {"event": "system:ready", "summary": "Return the completion service manager task.", "handler": "handle_ready", "module": "ksi_daemon.completion.completion_service"}, {"event": "system:ready", "summary": "Return async task to process injection queue.", "handler": "handle_ready", "module": "ksi_daemon.injection.injection_router"}], "state": [{"event": "state:get", "summary": "", "handler": "handle_get", "module": "ksi_daemon.core.state"}, {"event": "state:set", "summary": "", "handler": "handle_set", "module": "ksi_daemon.core.state"}, {"event": "state:delete", "summary": "", "handler": "handle_delete", "module": "ksi_daemon.core.state"}, {"event": "state:list", "summary": "", "handler": "handle_list", "module": "ksi_daemon.core.state"}], "async_state": [{"event": "async_state:get", "summary": "Get value from async state.", "handler": "handle_async_get", "module": "ksi_daemon.core.state"}, {"event": "async_state:set", "summary": "Set value in async state.", "handler": "handle_async_set", "module": "ksi_daemon.core.state"}, {"event": "async_state:delete", "summary": "Delete key from async state.", "handler": "handle_async_delete", "module": "ksi_daemon.core.state"}, {"event": "async_state:push", "summary": "Push value to async queue.", "handler": "handle_async_push", "module": "ksi_daemon.core.state"}, {"event": "async_state:pop", "summary": "Pop value from async queue.", "handler": "handle_async_pop", "module": "ksi_daemon.core.state"}, {"event": "async_state:get_keys", "summary": "Get all keys in a namespace.", "handler": "handle_async_get_keys", "module": "ksi_daemon.core.state"}, {"event": "async_state:queue_length", "summary": "Get length of async queue.", "handler": "handle_async_queue_length", "module": "ksi_daemon.core.state"}], "module": [{"event": "module:list", "summary": "List all loaded modules.", "handler": "handle_list_modules", "module": "ksi_daemon.daemon_core"}, {"event": "module:events", "summary": "List all registered events and patterns.", "handler": "handle_list_events", "module": "ksi_daemon.daemon_core"}, {"event": "module:inspect", "summary": "Inspect a specific module using direct function metadata.", "handler": "handle_inspect_module", "module": "ksi_daemon.daemon_core"}], "api": [{"event": "api:schema", "summary": "Get complete API schema using direct function inspection.", "handler": "handle_api_schema", "module": "ksi_daemon.daemon_core"}], "correlation": [{"event": "correlation:trace", "summary": "Get a specific correlation trace.", "handler": "handle_get_trace", "module": "ksi_daemon.core.correlation"}, {"event": "correlation:chain", "summary": "Get the full trace chain for a correlation ID.", "handler": "handle_get_trace_chain", "module": "ksi_daemon.core.correlation"}, {"event": "correlation:tree", "summary": "Get the full trace tree for a correlation ID.", "handler": "handle_get_trace_tree", "module": "ksi_daemon.core.correlation"}, {"event": "correlation:stats", "summary": "Get correlation tracking statistics.", "handler": "handle_get_stats", "module": "ksi_daemon.core.correlation"}, {"event": "correlation:cleanup", "summary": "Clean up old correlation traces.", "handler": "handle_cleanup", "module": "ksi_daemon.core.correlation"}, {"event": "correlation:current", "summary": "Get current correlation context.", "handler": "handle_get_current", "module": "ksi_daemon.core.correlation"}], "monitor": [{"event": "monitor:get_events", "summary": "", "handler": "handle_get_events", "module": "ksi_daemon.core.monitor"}, {"event": "monitor:get_stats", "summary": "", "handler": "handle_get_stats", "module": "ksi_daemon.core.monitor"}, {"event": "monitor:clear_log", "summary": "", "handler": "handle_clear_log", "module": "ksi_daemon.core.monitor"}, {"event": "monitor:subscribe", "summary": "", "handler": "handle_subscribe", "module": "ksi_daemon.core.monitor"}, {"event": "monitor:unsubscribe", "summary": "", "handler": "handle_unsubscribe", "module": "ksi_daemon.core.monitor"}, {"event": "monitor:query", "summary": "", "handler": "handle_query", "module": "ksi_daemon.core.monitor"}, {"event": "monitor:get_session_events", "summary": "", "handler": "handle_get_session_events", "module": "ksi_daemon.core.monitor"}, {"event": "monitor:get_correlation_chain", "summary": "", "handler": "handle_get_correlation_chain", "module": "ksi_daemon.core.monitor"}], "transport": [{"event": "transport:create", "summary": "Create Unix socket transport if requested.", "handler": "handle_create_transport", "module": "ksi_daemon.transport.unix_socket"}, {"event": "transport:message", "summary": "Handle legacy transport:message events by converting them.", "handler": "handle_transport_message", "module": "ksi_daemon.messaging.message_bus"}], "completion": [{"event": "completion:cancelled", "summary": "Broadcast certain events to all connected clients.", "handler": "handle_broadcastable_event", "module": "ksi_daemon.transport.unix_socket"}, {"event": "completion:error", "summary": "Broadcast certain events to all connected clients.", "handler": "handle_broadcastable_event", "module": "ksi_daemon.transport.unix_socket"}, {"event": "completion:progress", "summary": "Broadcast certain events to all connected clients.", "handler": "handle_broadcastable_event", "module": "ksi_daemon.transport.unix_socket"}, {"event": "completion:result", "summary": "Broadcast certain events to all connected clients.", "handler": "handle_broadcastable_event", "module": "ksi_daemon.transport.unix_socket"}, {"event": "completion:async", "summary": "", "handler": "handle_async_completion", "module": "ksi_daemon.completion.completion_service"}, {"event": "completion:cancel", "summary": "Cancel an in-progress completion.", "handler": "handle_cancel_completion", "module": "ksi_daemon.completion.completion_service"}, {"event": "completion:status", "summary": "Get status of all active completions.", "handler": "handle_completion_status", "module": "ksi_daemon.completion.completion_service"}, {"event": "completion:session_status", "summary": "Get detailed status for a specific session.", "handler": "handle_session_status", "module": "ksi_daemon.completion.completion_service"}], "permission": [{"event": "permission:get_profile", "summary": "Get details of a specific permission profile.", "handler": "handle_get_profile", "module": "ksi_daemon.permissions.permission_service"}, {"event": "permission:set_agent", "summary": "Set permissions for an agent.", "handler": "handle_set_agent_permissions", "module": "ksi_daemon.permissions.permission_service"}, {"event": "permission:validate_spawn", "summary": "Validate if parent can spawn child with given permissions.", "handler": "handle_validate_spawn", "module": "ksi_daemon.permissions.permission_service"}, {"event": "permission:get_agent", "summary": "Get permissions for a specific agent.", "handler": "handle_get_agent_permissions", "module": "ksi_daemon.permissions.permission_service"}, {"event": "permission:remove_agent", "summary": "Remove permissions for an agent.", "handler": "handle_remove_agent_permissions", "module": "ksi_daemon.permissions.permission_service"}, {"event": "permission:list_profiles", "summary": "List available permission profiles.", "handler": "handle_list_profiles", "module": "ksi_daemon.permissions.permission_service"}], "sandbox": [{"event": "sandbox:create", "summary": "Create a new sandbox for an agent.", "handler": "handle_create_sandbox", "module": "ksi_daemon.permissions.permission_service"}, {"event": "sandbox:get", "summary": "Get sandbox information for an agent.", "handler": "handle_get_sandbox", "module": "ksi_daemon.permissions.permission_service"}, {"event": "sandbox:remove", "summary": "Remove an agent's sandbox.", "handler": "handle_remove_sandbox", "module": "ksi_daemon.permissions.permission_service"}, {"event": "sandbox:list", "summary": "List all active sandboxes.", "handler": "handle_list_sandboxes", "module": "ksi_daemon.permissions.permission_service"}, {"event": "sandbox:stats", "summary": "Get sandbox statistics.", "handler": "handle_sandbox_stats", "module": "ksi_daemon.permissions.permission_service"}], "agent": [{"event": "agent:spawn", "summary": "Spawn a new agent thread with optional profile.", "handler": "handle_spawn_agent", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:terminate", "summary": "Terminate an agent thread.", "handler": "handle_terminate_agent", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:restart", "summary": "Restart an agent.", "handler": "handle_restart_agent", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:register", "summary": "Register an external agent.", "handler": "handle_register_agent", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:unregister", "summary": "Unregister an agent.", "handler": "handle_unregister_agent", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:list", "summary": "List registered agents.", "handler": "handle_list_agents", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:create_identity", "summary": "Create a new agent identity.", "handler": "handle_create_identity", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:update_identity", "summary": "Update an agent identity.", "handler": "handle_update_identity", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:remove_identity", "summary": "Remove an agent identity.", "handler": "handle_remove_identity", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:list_identities", "summary": "List agent identities.", "handler": "handle_list_identities", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:get_identity", "summary": "Get a specific agent identity.", "handler": "handle_get_identity", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:route_task", "summary": "Route a task to an appropriate agent.", "handler": "handle_route_task", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:get_capabilities", "summary": "Get capabilities of an agent or all agents.", "handler": "handle_get_capabilities", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:send_message", "summary": "Send a message to an agent.", "handler": "handle_send_message", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:broadcast", "summary": "Broadcast a message to all agents.", "handler": "handle_broadcast", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:update_composition", "summary": "Handle agent composition update request.", "handler": "handle_update_composition", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:discover_peers", "summary": "Discover other agents and their capabilities.", "handler": "handle_discover_peers", "module": "ksi_daemon.agent.agent_service"}, {"event": "agent:negotiate_roles", "summary": "Coordinate role negotiation between agents.", "handler": "handle_negotiate_roles", "module": "ksi_daemon.agent.agent_service"}], "message": [{"event": "message:subscribe", "summary": "Handle subscription request.", "handler": "handle_subscribe", "module": "ksi_daemon.messaging.message_bus"}, {"event": "message:unsubscribe", "summary": "Handle unsubscription request.", "handler": "handle_unsubscribe", "module": "ksi_daemon.messaging.message_bus"}, {"event": "message:publish", "summary": "Handle message publication.", "handler": "handle_publish", "module": "ksi_daemon.messaging.message_bus"}, {"event": "message:subscriptions", "summary": "Get subscription information.", "handler": "handle_get_subscriptions", "module": "ksi_daemon.messaging.message_bus"}, {"event": "message:connect", "summary": "Handle agent connection.", "handler": "handle_connect_agent", "module": "ksi_daemon.messaging.message_bus"}, {"event": "message:disconnect", "summary": "Handle agent disconnection.", "handler": "handle_disconnect_agent", "module": "ksi_daemon.messaging.message_bus"}], "message_bus": [{"event": "message_bus:stats", "summary": "Get message bus statistics.", "handler": "handle_get_stats", "module": "ksi_daemon.messaging.message_bus"}], "orchestration": [{"event": "orchestration:start", "summary": "Start a new orchestration.", "handler": "handle_orchestration_start", "module": "ksi_daemon.orchestration.orchestration_service"}, {"event": "orchestration:message", "summary": "Route a message within an orchestration.", "handler": "handle_orchestration_message", "module": "ksi_daemon.orchestration.orchestration_service"}, {"event": "orchestration:status", "summary": "Get orchestration status.", "handler": "handle_orchestration_status", "module": "ksi_daemon.orchestration.orchestration_service"}, {"event": "orchestration:terminate", "summary": "Manually terminate an orchestration.", "handler": "handle_orchestration_terminate", "module": "ksi_daemon.orchestration.orchestration_service"}, {"event": "orchestration:list_patterns", "summary": "List available orchestration patterns.", "handler": "handle_list_patterns", "module": "ksi_daemon.orchestration.orchestration_service"}, {"event": "orchestration:load_pattern", "summary": "Load and validate an orchestration pattern.", "handler": "handle_load_pattern", "module": "ksi_daemon.orchestration.orchestration_service"}, {"event": "orchestration:get_instance", "summary": "Get detailed information about an orchestration instance.", "handler": "handle_get_instance", "module": "ksi_daemon.orchestration.orchestration_service"}], "composition": [{"event": "composition:compose", "summary": "Handle generic composition request.", "handler": "handle_compose", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:profile", "summary": "Handle profile composition request.", "handler": "handle_compose_profile", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:prompt", "summary": "Handle prompt composition request.", "handler": "handle_compose_prompt", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:validate", "summary": "Validate a composition.", "handler": "handle_validate", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:discover", "summary": "Discover available compositions using index with optional metadata filtering.", "handler": "handle_discover", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:list", "summary": "List all compositions of a given type.", "handler": "handle_list", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:get", "summary": "Get a composition definition.", "handler": "handle_get", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:reload", "summary": "Reload compositions by rebuilding index.", "handler": "handle_reload", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:load_tree", "summary": "Universal tree loading based on composition's declared strategy.", "handler": "handle_load_tree", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:load_bulk", "summary": "Universal bulk loading for agent efficiency.", "handler": "handle_load_bulk", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:select", "summary": "Handle intelligent composition selection using sophisticated scoring algorithm.", "handler": "handle_select_composition", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:suggest", "summary": "Get top N composition suggestions for the given context.", "handler": "handle_suggest_compositions", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:validate_context", "summary": "Validate that a composition will work with the given context.", "handler": "handle_validate_context", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:capabilities", "summary": "Get available KSI capabilities from declarative schema.", "handler": "handle_get_capabilities", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:get_path", "summary": "Get the file path for a composition.", "handler": "handle_get_path", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:get_metadata", "summary": "Get metadata for a composition.", "handler": "handle_get_metadata", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:rebuild_index", "summary": "Rebuild the composition index.", "handler": "handle_rebuild_index", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:index_file", "summary": "Index a single composition file.", "handler": "handle_index_file", "module": "ksi_daemon.composition.composition_service"}, {"event": "composition:create", "summary": "Handle runtime composition creation.", "handler": "handle_create_composition", "module": "ksi_daemon.composition.composition_service"}], "conversation": [{"event": "conversation:list", "summary": "List available conversations with metadata.", "handler": "handle_list_conversations", "module": "ksi_daemon.conversation.conversation_service"}, {"event": "conversation:search", "summary": "Search conversations by content.", "handler": "handle_search_conversations", "module": "ksi_daemon.conversation.conversation_service"}, {"event": "conversation:get", "summary": "Get a specific conversation with full message history.", "handler": "handle_get_conversation", "module": "ksi_daemon.conversation.conversation_service"}, {"event": "conversation:export", "summary": "Export conversation to markdown or JSON format.", "handler": "handle_export_conversation", "module": "ksi_daemon.conversation.conversation_service"}, {"event": "conversation:stats", "summary": "Get statistics about conversations.", "handler": "handle_conversation_stats", "module": "ksi_daemon.conversation.conversation_service"}, {"event": "conversation:active", "summary": "Find active conversations from recent COMPLETION_RESULT messages.", "handler": "handle_active_conversations", "module": "ksi_daemon.conversation.conversation_service"}, {"event": "conversation:active", "summary": "Get all active (locked) conversations.", "handler": "handle_active_conversations", "module": "ksi_daemon.conversation.conversation_lock"}, {"event": "conversation:acquire_lock", "summary": "Acquire lock for a conversation.", "handler": "handle_acquire_lock", "module": "ksi_daemon.conversation.conversation_lock"}, {"event": "conversation:release_lock", "summary": "Release a conversation lock.", "handler": "handle_release_lock", "module": "ksi_daemon.conversation.conversation_lock"}, {"event": "conversation:fork_detected", "summary": "Handle fork detection.", "handler": "handle_fork_detected", "module": "ksi_daemon.conversation.conversation_lock"}, {"event": "conversation:lock_status", "summary": "Get lock status for a conversation.", "handler": "handle_lock_status", "module": "ksi_daemon.conversation.conversation_lock"}], "injection": [{"event": "injection:status", "summary": "Get injection router status.", "handler": "handle_injection_status", "module": "ksi_daemon.injection.injection_router"}, {"event": "injection:inject", "summary": "Handle unified injection request.", "handler": "handle_injection_inject", "module": "ksi_daemon.injection.injection_router"}, {"event": "injection:queue", "summary": "Handle queue injection metadata request from completion service.", "handler": "handle_injection_queue", "module": "ksi_daemon.injection.injection_router"}, {"event": "injection:batch", "summary": "Handle batch injection request.", "handler": "handle_injection_batch", "module": "ksi_daemon.injection.injection_router"}, {"event": "injection:list", "summary": "Handle list injections request.", "handler": "handle_injection_list", "module": "ksi_daemon.injection.injection_router"}, {"event": "injection:clear", "summary": "Handle clear injections request.", "handler": "handle_injection_clear", "module": "ksi_daemon.injection.injection_router"}, {"event": "injection:process_result", "summary": "Process a completion result for injection - explicitly called by completion service.", "handler": "handle_injection_process_result", "module": "ksi_daemon.injection.injection_router"}, {"event": "injection:execute", "summary": "Execute a queued injection by creating a new completion request.", "handler": "execute_injection", "module": "ksi_daemon.injection.injection_router"}], "file": [{"event": "file:read", "summary": "", "handler": "handle_read", "module": "ksi_daemon.file.file_service"}, {"event": "file:write", "summary": "", "handler": "handle_write", "module": "ksi_daemon.file.file_service"}, {"event": "file:backup", "summary": "", "handler": "handle_backup", "module": "ksi_daemon.file.file_service"}, {"event": "file:rollback", "summary": "", "handler": "handle_rollback", "module": "ksi_daemon.file.file_service"}, {"event": "file:list", "summary": "", "handler": "handle_list", "module": "ksi_daemon.file.file_service"}, {"event": "file:validate", "summary": "", "handler": "handle_validate", "module": "ksi_daemon.file.file_service"}], "config": [{"event": "config:get", "summary": "", "handler": "handle_get", "module": "ksi_daemon.config.config_service"}, {"event": "config:set", "summary": "", "handler": "handle_set", "module": "ksi_daemon.config.config_service"}, {"event": "config:validate", "summary": "", "handler": "handle_validate", "module": "ksi_daemon.config.config_service"}, {"event": "config:reload", "summary": "", "handler": "handle_reload", "module": "ksi_daemon.config.config_service"}, {"event": "config:backup", "summary": "", "handler": "handle_backup", "module": "ksi_daemon.config.config_service"}, {"event": "config:rollback", "summary": "", "handler": "handle_rollback", "module": "ksi_daemon.config.config_service"}]}, "total_events": 180}, "count": 1, "correlation_id": null, "timestamp": 1539140.150596666}
