[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ksi"
version = "0.1.0"
description = "KSI - Event-driven multi-agent orchestration system"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "KSI Contributors"},
]
keywords = ["agents", "orchestration", "event-driven", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "ruamel.yaml>=0.17.0",
    "python-frontmatter>=1.1.0",
    "pydantic-yaml>=1.0.0",
    "textual>=0.47.0",
    "psutil>=5.9.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "structlog>=24.1.0",
    "tenacity>=8.2.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "litellm>=1.37.0",
    "simpervisor>=1.0.0",
    "python-daemon>=3.0.0",
    "aioinject>=0.30.0",
    "watchfiles>=0.21.0",
    "aiosqlite>=0.19.0",
    "aiofiles>=23.2.0",
    "dspy>=2.5.6",  # DSPy framework for prompt optimization
    "optuna>=3.5.0",  # For Bayesian optimization in MIPROv2
    "mlflow>=2.21.1",  # For DSPy optimization tracking and observability
    "websockets>=12.0",  # For WebSocket bridge
    "nest_asyncio>=1.5.0",  # For DSPy async compatibility
    "scipy>=1.11.0",  # For statistical analysis in A/B testing
    "matplotlib>=3.7.0",  # For plotting test results
    "seaborn>=0.12.0",  # For enhanced statistical visualizations
    "numpy>=1.24.0",  # For numerical operations
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "black>=23.0.0",
]

[project.scripts]
ksi = "ksi_cli:run"
ksi-daemon = "ksi_daemon.daemon_core:main"
ksi-monitor = "ksi_tui.apps.monitor.monitor_app:run"
ksi-chat = "ksi_tui.apps.chat.chat_app:run"

[project.urls]
Homepage = "https://github.com/durapensa/ksi"
Documentation = "https://github.com/durapensa/ksi/blob/main/README.md"
Repository = "https://github.com/durapensa/ksi.git"
Issues = "https://github.com/durapensa/ksi/issues"

[tool.setuptools]
packages = ["ksi_daemon", "ksi_client", "ksi_common", "ksi_tui", "ksi_claude_code"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "*.egg-info",
    "build",
    "dist",
    "var",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "I"]  # I = isort
ignore = [
    "E501",  # Line too long - we'll use a longer line length
    "E402",  # Module import not at top of file - sometimes needed
    "E722",  # Do not use bare except - sometimes needed for robustness
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = ["ksi_common", "ksi_daemon", "ksi_client"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"